language: python
env:
  global:
  - HELM_URL=https://storage.googleapis.com/kubernetes-helm
  - HELM_TGZ=helm-v2.9.1-linux-amd64.tar.gz
  - TARGET_BR=gh-pages
  - REPO_DIR=/home/travis/build/gkarthiks/helm-charts
  - GH_URL=https://gkarthiks.github.io/helm-charts
  - YAMLLINT_VERSION=1.11.1
  - secure: BXSNFO9jC9V244f6vG4OgLVHj89hnEv/V31jph+1ezfRmYEW9twC3u2tNJAUT0c0GFQwJkSukVRWb8WIbiRYAlHSmJNxldn4aSnk7HHuNezj5laB8GKqy2NZ9b4WDYN0Hai5S2z5qmJWy8hv01tynsFlT0iSjGo7bw/8R99l9GqDnqYg7HnBnrz7ORdaDgclO1Y0/MNkCNRuaJPwBXfDcKRueRuryOXMCn+pfAoyQPXTDNrelvY/7rjqswmNzsbtdrpg/ELbDhEXS5gwLwK8RgPZWTVtbnLhX+gpPbinaS6mPhvzy3Hh2sR2gAC8m2R7+uj9Jfhn4UwnsaESia87KTTquO48EF6hLz1TKgPuHcxwah+utFaysg5W/bTk6hLljClLqgrHXMertmgnYEdb5jq/Pic7CGQNMfeSh0lID/7Xl/Dc6H/2kOosACa1SGG4Zhq1C6+pMPvTS98gpp7mr9mhb6Pts1XPKBfLlxPAvRVgdAz9zKKlqzbCc3G5sSzCtQTtz2/W8+QbZdVEchQCP7aEwB569TwCQsEkqCeC2G4L16837gwWCFh1GF7tkh0GTzQKAcvEs82c5dFChqD+OnlibRcokGEGk1A7WQkKTxkdF80qvm1h9IVyaII4GAr78yvsmnajtpPW7P4gFAXfVMIwB2jNwpEA831Hl0cG/dI=
install:
- wget -q ${HELM_URL}/${HELM_TGZ}
- tar xzfv ${HELM_TGZ}
- PATH=`pwd`/linux-amd64/:$PATH
- helm init --client-only
- pip install yamllint=="${YAMLLINT_VERSION}"
script:
- |
  for dir in `ls ${REPO_DIR}/charts`; do
   helm lint ${REPO_DIR}/charts/$dir
   if [ $? != 0 ]; then
    travis_terminate 1
   fi
  done
- yamllint -c .yamllint.yml -s .travis.yml .yamllint.yml
- yamllint -c .yamllint.yml -s $(find . -type f -name "Chart.yaml")
- yamllint -c .yamllint.yml -s $(find . -type f -name "values.yaml")
after_success:
- |
  # if [ $TRAVIS_BRANCH = 'master' ] && [ $TRAVIS_PULL_REQUEST = 'false' ]; then
  #   openssl aes-256-cbc -K $encrypted_87c45dfd716f_key -iv $encrypted_87c45dfd716f_iv -in .ssh-keys/travis.enc -out .ssh-keys/travis -d
  #   chmod 600 .ssh-keys/travis
  #   eval $(ssh-agent -s)
  #   ssh-add .ssh-keys/travis

    # Temporary dir for storing new packaged charts and index files
    BUILD_DIR=$(mktemp -d)
    # Useful URLs
    REPO_URL=`git config remote.origin.url`
    SSH_REPO=${REPO_URL/https:\/\/github.com\//git@github.com:}
    SHA=`git rev-parse --verify HEAD`
    # Push temporary directory to the stack
    pushd $BUILD_DIR
    # Iterate over all charts are package them
    for dir in `ls ${REPO_DIR}/charts`; do
     helm dep update ${REPO_DIR}/charts/$dir
     helm package ${REPO_DIR}/charts/$dir
    done
    popd
    # List all the contents that we will push
    ls ${BUILD_DIR}
    # Clone repository and empty target branch
    git clone ${REPO_URL} out
    cd out
    git checkout ${TARGET_BR} || git checkout --orphan ${TARGET_BR}
    cd ..

    cp out/index.yaml $BUILD_DIR || true
    pushd $BUILD_DIR
    # Indexing of charts
    if [ -f index.yaml ]; then
     helm repo index --url ${GH_URL} --merge index.yaml .
    else
     helm repo index --url ${GH_URL} .
    fi
    # Pop temporary directory from the stack
    popd

    # Copying contents of BUILD_DIR to out folder
    cp $BUILD_DIR/* out/
    cp ./index.html out/
    cd out
    # Deploy if there are some changes
    git diff --quiet
    if [ $? != 0 ]; then
     # Add all new files to staging phase and commit the changes
     git config user.name "Travis CI"
     git config user.email "travis@travis-ci.org"
     git add -A .
     git status
     git commit -m "Travis deploy ${SHA}"
     # We can push.
     git push ${SSH_REPO}
    fi
  fi
